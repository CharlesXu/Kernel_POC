--- Kernel/drivers/gpu/pvr/pvr_bridge.h
+++ Kernel/drivers/gpu/pvr/pvr_bridge.h
@@ -1,6 +1,6 @@
 /**********************************************************************
  *
- * Copyright(c) 2008 Imagination Technologies Ltd. All rights reserved.
+ * Copyright (C) Imagination Technologies Ltd. All rights reserved.
  * 
  * This program is free software; you can redistribute it and/or modify it
  * under the terms and conditions of the GNU General Public License,
@@ -68,7 +68,7 @@
 #define PVRSRV_BRIDGE_GETFREE_DEVICEMEM			PVRSRV_IOWR(PVRSRV_BRIDGE_CORE_CMD_FIRST+8)	
 #define PVRSRV_BRIDGE_CREATE_COMMANDQUEUE		PVRSRV_IOWR(PVRSRV_BRIDGE_CORE_CMD_FIRST+9)	
 #define PVRSRV_BRIDGE_DESTROY_COMMANDQUEUE		PVRSRV_IOWR(PVRSRV_BRIDGE_CORE_CMD_FIRST+10)	
-#define	PVRSRV_BRIDGE_MHANDLE_TO_MMAP_DATA           PVRSRV_IOWR(PVRSRV_BRIDGE_CORE_CMD_FIRST+11)   
+#define	PVRSRV_BRIDGE_MHANDLE_TO_MMAP_DATA		PVRSRV_IOWR(PVRSRV_BRIDGE_CORE_CMD_FIRST+11)   
 #define PVRSRV_BRIDGE_CONNECT_SERVICES			PVRSRV_IOWR(PVRSRV_BRIDGE_CORE_CMD_FIRST+12)	
 #define PVRSRV_BRIDGE_DISCONNECT_SERVICES		PVRSRV_IOWR(PVRSRV_BRIDGE_CORE_CMD_FIRST+13)	
 #define PVRSRV_BRIDGE_WRAP_DEVICE_MEM			PVRSRV_IOWR(PVRSRV_BRIDGE_CORE_CMD_FIRST+14)	
@@ -85,7 +85,10 @@
 #define PVRSRV_BRIDGE_UNMAP_MEM_INFO_FROM_USER	PVRSRV_IOWR(PVRSRV_BRIDGE_CORE_CMD_FIRST+25)
 #define PVRSRV_BRIDGE_EXPORT_DEVICEMEM			PVRSRV_IOWR(PVRSRV_BRIDGE_CORE_CMD_FIRST+26)
 #define PVRSRV_BRIDGE_RELEASE_MMAP_DATA			PVRSRV_IOWR(PVRSRV_BRIDGE_CORE_CMD_FIRST+27)
-#define PVRSRV_BRIDGE_CORE_CMD_LAST				(PVRSRV_BRIDGE_CORE_CMD_FIRST+27)
+#define PVRSRV_BRIDGE_CHG_DEV_MEM_ATTRIBS		PVRSRV_IOWR(PVRSRV_BRIDGE_CORE_CMD_FIRST+28)
+#define PVRSRV_BRIDGE_MAP_DEV_MEMORY_2			PVRSRV_IOWR(PVRSRV_BRIDGE_CORE_CMD_FIRST+29)
+#define PVRSRV_BRIDGE_EXPORT_DEVICEMEM_2		PVRSRV_IOWR(PVRSRV_BRIDGE_CORE_CMD_FIRST+30)
+#define PVRSRV_BRIDGE_CORE_CMD_LAST				(PVRSRV_BRIDGE_CORE_CMD_FIRST+30)
 
 #define PVRSRV_BRIDGE_SIM_CMD_FIRST				(PVRSRV_BRIDGE_CORE_CMD_LAST+1)
 #define PVRSRV_BRIDGE_PROCESS_SIMISR_EVENT		PVRSRV_IOWR(PVRSRV_BRIDGE_SIM_CMD_FIRST+0)	
@@ -165,10 +168,10 @@
 #define PVRSRV_BRIDGE_SET_DISPCLASS_SRCCOLOURKEY		PVRSRV_IOWR(PVRSRV_BRIDGE_DISPCLASS_CMD_FIRST+11)
 #define PVRSRV_BRIDGE_GET_DISPCLASS_BUFFERS		PVRSRV_IOWR(PVRSRV_BRIDGE_DISPCLASS_CMD_FIRST+12)
 #define PVRSRV_BRIDGE_SWAP_DISPCLASS_TO_BUFFER	PVRSRV_IOWR(PVRSRV_BRIDGE_DISPCLASS_CMD_FIRST+13)
-#define PVRSRV_BRIDGE_SWAP_DISPCLASS_TO_SYSTEM	PVRSRV_IOWR(PVRSRV_BRIDGE_DISPCLASS_CMD_FIRST+14)
-#define PVRSRV_BRIDGE_DISPCLASS_CMD_LAST		(PVRSRV_BRIDGE_DISPCLASS_CMD_FIRST+14)
+#define PVRSRV_BRIDGE_SWAP_DISPCLASS_TO_BUFFER2	PVRSRV_IOWR(PVRSRV_BRIDGE_DISPCLASS_CMD_FIRST+14)
+#define PVRSRV_BRIDGE_SWAP_DISPCLASS_TO_SYSTEM	PVRSRV_IOWR(PVRSRV_BRIDGE_DISPCLASS_CMD_FIRST+15)
+#define PVRSRV_BRIDGE_DISPCLASS_CMD_LAST		(PVRSRV_BRIDGE_DISPCLASS_CMD_FIRST+15)
 
- 
 #define PVRSRV_BRIDGE_BUFCLASS_CMD_FIRST		(PVRSRV_BRIDGE_DISPCLASS_CMD_LAST+1)
 #define PVRSRV_BRIDGE_OPEN_BUFFERCLASS_DEVICE	PVRSRV_IOWR(PVRSRV_BRIDGE_BUFCLASS_CMD_FIRST+0)
 #define PVRSRV_BRIDGE_CLOSE_BUFFERCLASS_DEVICE	PVRSRV_IOWR(PVRSRV_BRIDGE_BUFCLASS_CMD_FIRST+1)
@@ -197,7 +200,7 @@
 #define PVRSRV_BRIDGE_INITSRV_DISCONNECT		PVRSRV_IOWR(PVRSRV_BRIDGE_INITSRV_CMD_FIRST+1)
 #define PVRSRV_BRIDGE_INITSRV_CMD_LAST			(PVRSRV_BRIDGE_INITSRV_CMD_FIRST+1)
 
-#define PVRSRV_BRIDGE_EVENT_OBJECT_CMD_FIRST	(PVRSRV_BRIDGE_INITSRV_CMD_LAST+1)	
+#define PVRSRV_BRIDGE_EVENT_OBJECT_CMD_FIRST	(PVRSRV_BRIDGE_INITSRV_CMD_LAST+1)
 #define PVRSRV_BRIDGE_EVENT_OBJECT_WAIT			PVRSRV_IOWR(PVRSRV_BRIDGE_EVENT_OBJECT_CMD_FIRST+0)
 #define PVRSRV_BRIDGE_EVENT_OBJECT_OPEN			PVRSRV_IOWR(PVRSRV_BRIDGE_EVENT_OBJECT_CMD_FIRST+1)
 #define PVRSRV_BRIDGE_EVENT_OBJECT_CLOSE		PVRSRV_IOWR(PVRSRV_BRIDGE_EVENT_OBJECT_CMD_FIRST+2)
@@ -208,12 +211,14 @@
 #define PVRSRV_BRIDGE_DESTROY_SYNC_INFO_MOD_OBJ	PVRSRV_IOWR(PVRSRV_BRIDGE_SYNC_OPS_CMD_FIRST+1)
 #define PVRSRV_BRIDGE_MODIFY_PENDING_SYNC_OPS	PVRSRV_IOWR(PVRSRV_BRIDGE_SYNC_OPS_CMD_FIRST+2)
 #define PVRSRV_BRIDGE_MODIFY_COMPLETE_SYNC_OPS	PVRSRV_IOWR(PVRSRV_BRIDGE_SYNC_OPS_CMD_FIRST+3)
-#define PVRSRV_BRIDGE_SYNC_OPS_FLUSH_TO_MOD_OBJ	PVRSRV_IOWR(PVRSRV_BRIDGE_SYNC_OPS_CMD_FIRST+4)
-#define PVRSRV_BRIDGE_SYNC_OPS_FLUSH_TO_DELTA	PVRSRV_IOWR(PVRSRV_BRIDGE_SYNC_OPS_CMD_FIRST+5)
-#define PVRSRV_BRIDGE_ALLOC_SYNC_INFO           PVRSRV_IOWR(PVRSRV_BRIDGE_SYNC_OPS_CMD_FIRST+6)
-#define PVRSRV_BRIDGE_FREE_SYNC_INFO            PVRSRV_IOWR(PVRSRV_BRIDGE_SYNC_OPS_CMD_FIRST+7)
-#define PVRSRV_BRIDGE_SYNC_OPS_CMD_LAST			(PVRSRV_BRIDGE_SYNC_OPS_CMD_FIRST+7)
-	
+#define PVRSRV_BRIDGE_SYNC_OPS_TAKE_TOKEN       PVRSRV_IOWR(PVRSRV_BRIDGE_SYNC_OPS_CMD_FIRST+4)
+#define PVRSRV_BRIDGE_SYNC_OPS_FLUSH_TO_TOKEN   PVRSRV_IOWR(PVRSRV_BRIDGE_SYNC_OPS_CMD_FIRST+5)
+#define PVRSRV_BRIDGE_SYNC_OPS_FLUSH_TO_MOD_OBJ	PVRSRV_IOWR(PVRSRV_BRIDGE_SYNC_OPS_CMD_FIRST+6)
+#define PVRSRV_BRIDGE_SYNC_OPS_FLUSH_TO_DELTA	PVRSRV_IOWR(PVRSRV_BRIDGE_SYNC_OPS_CMD_FIRST+7)
+#define PVRSRV_BRIDGE_ALLOC_SYNC_INFO           PVRSRV_IOWR(PVRSRV_BRIDGE_SYNC_OPS_CMD_FIRST+8)
+#define PVRSRV_BRIDGE_FREE_SYNC_INFO            PVRSRV_IOWR(PVRSRV_BRIDGE_SYNC_OPS_CMD_FIRST+9)
+#define PVRSRV_BRIDGE_SYNC_OPS_CMD_LAST			(PVRSRV_BRIDGE_SYNC_OPS_CMD_FIRST+9)
+
 #define PVRSRV_BRIDGE_LAST_NON_DEVICE_CMD		(PVRSRV_BRIDGE_SYNC_OPS_CMD_LAST+1)
 
 
@@ -231,19 +236,19 @@
 {
 	IMG_UINT32				ui32BridgeID;			
 	IMG_UINT32				ui32Size;				
-	IMG_VOID				*pvParamIn;				 
+	IMG_VOID				*pvParamIn;				
 	IMG_UINT32				ui32InBufferSize;		
 	IMG_VOID				*pvParamOut;			
 	IMG_UINT32				ui32OutBufferSize;		
 
+#if defined (SUPPORT_SID_INTERFACE)
+	IMG_SID					hKernelServices;		
+#else
 	IMG_HANDLE				hKernelServices;		
+#endif
 }PVRSRV_BRIDGE_PACKAGE;
 
 
- 
-
-
- 
 typedef struct PVRSRV_BRIDGE_IN_CONNECT_SERVICES_TAG
 {
 	IMG_UINT32		ui32BridgeFlags; 
@@ -268,56 +273,82 @@
 
 typedef struct PVRSRV_BRIDGE_IN_CLOSE_DISPCLASS_DEVICE_TAG
 {
-	IMG_UINT32			ui32BridgeFlags; 
+	IMG_UINT32 ui32BridgeFlags; 
+#if defined (SUPPORT_SID_INTERFACE)
+	IMG_SID    hDeviceKM;
+#else
 	IMG_HANDLE			hDeviceKM;
+#endif
 } PVRSRV_BRIDGE_IN_CLOSE_DISPCLASS_DEVICE;
 
 
 typedef struct PVRSRV_BRIDGE_IN_ENUM_DISPCLASS_FORMATS_TAG
 {
-	IMG_UINT32			ui32BridgeFlags; 
+	IMG_UINT32 ui32BridgeFlags; 
+#if defined (SUPPORT_SID_INTERFACE)
+	IMG_SID    hDeviceKM;
+#else
 	IMG_HANDLE			hDeviceKM;
+#endif
 } PVRSRV_BRIDGE_IN_ENUM_DISPCLASS_FORMATS;
 
 
 typedef struct PVRSRV_BRIDGE_IN_GET_DISPCLASS_SYSBUFFER_TAG
 {
-	IMG_UINT32			ui32BridgeFlags; 
+	IMG_UINT32 ui32BridgeFlags; 
+#if defined (SUPPORT_SID_INTERFACE)
+	IMG_SID    hDeviceKM;
+#else
 	IMG_HANDLE			hDeviceKM;
+#endif
 } PVRSRV_BRIDGE_IN_GET_DISPCLASS_SYSBUFFER;
 
 
 typedef struct PVRSRV_BRIDGE_IN_GET_DISPCLASS_INFO_TAG
 {
-	IMG_UINT32			ui32BridgeFlags; 
+	IMG_UINT32 ui32BridgeFlags; 
+#if defined (SUPPORT_SID_INTERFACE)
+	IMG_SID    hDeviceKM;
+#else
 	IMG_HANDLE			hDeviceKM;
+#endif
 } PVRSRV_BRIDGE_IN_GET_DISPCLASS_INFO;
 
 
 typedef struct PVRSRV_BRIDGE_IN_CLOSE_BUFFERCLASS_DEVICE_TAG
 {
-	IMG_UINT32			ui32BridgeFlags; 
+	IMG_UINT32 ui32BridgeFlags; 
+#if defined (SUPPORT_SID_INTERFACE)
+	IMG_SID    hDeviceKM;
+#else
 	IMG_HANDLE			hDeviceKM;
+#endif
 } PVRSRV_BRIDGE_IN_CLOSE_BUFFERCLASS_DEVICE;
 
 
 typedef struct PVRSRV_BRIDGE_IN_GET_BUFFERCLASS_INFO_TAG
 {
-	IMG_UINT32			ui32BridgeFlags; 
+	IMG_UINT32 ui32BridgeFlags; 
+#if defined (SUPPORT_SID_INTERFACE)
+	IMG_SID    hDeviceKM;
+#else
 	IMG_HANDLE			hDeviceKM;
+#endif
 } PVRSRV_BRIDGE_IN_GET_BUFFERCLASS_INFO;
 
 
- 
 typedef struct PVRSRV_BRIDGE_IN_RELEASE_DEVICEINFO_TAG
 {
 	IMG_UINT32			ui32BridgeFlags; 
+#if defined (SUPPORT_SID_INTERFACE)
+	IMG_SID				hDevCookie;
+#else
 	IMG_HANDLE			hDevCookie;
+#endif
 
 } PVRSRV_BRIDGE_IN_RELEASE_DEVICEINFO;
 
 
- 
 typedef struct PVRSRV_BRIDGE_IN_FREE_CLASSDEVICEINFO_TAG
 {
 	IMG_UINT32			ui32BridgeFlags; 
@@ -327,85 +358,119 @@
 }PVRSRV_BRIDGE_IN_FREE_CLASSDEVICEINFO;
 
 
- 
 typedef struct PVRSRV_BRIDGE_IN_GET_DEVMEM_HEAPINFO_TAG
 {
 	IMG_UINT32			ui32BridgeFlags; 
+#if defined (SUPPORT_SID_INTERFACE)
+	IMG_SID				hDevCookie;
+	IMG_SID	 			hDevMemContext;
+#else
 	IMG_HANDLE			hDevCookie;
 	IMG_HANDLE 			hDevMemContext;
+#endif
 
 }PVRSRV_BRIDGE_IN_GET_DEVMEM_HEAPINFO;
 
 
- 
 typedef struct PVRSRV_BRIDGE_IN_CREATE_DEVMEMCONTEXT_TAG
 {
 	IMG_UINT32			ui32BridgeFlags; 
+#if defined (SUPPORT_SID_INTERFACE)
+	IMG_SID				hDevCookie;
+#else
 	IMG_HANDLE			hDevCookie;
+#endif
 
 }PVRSRV_BRIDGE_IN_CREATE_DEVMEMCONTEXT;
 
 
- 
 typedef struct PVRSRV_BRIDGE_IN_DESTROY_DEVMEMCONTEXT_TAG
 {
 	IMG_UINT32			ui32BridgeFlags; 
+#if defined (SUPPORT_SID_INTERFACE)
+	IMG_SID 			hDevCookie;
+	IMG_SID 			hDevMemContext;
+#else
 	IMG_HANDLE 			hDevCookie;
 	IMG_HANDLE 			hDevMemContext;
+#endif
 
 }PVRSRV_BRIDGE_IN_DESTROY_DEVMEMCONTEXT;
 
 
- 
 typedef struct PVRSRV_BRIDGE_IN_ALLOCDEVICEMEM_TAG
 {
 	IMG_UINT32			ui32BridgeFlags; 
+#if defined (SUPPORT_SID_INTERFACE)
+	IMG_SID				hDevCookie;
+	IMG_SID				hDevMemHeap;
+#else
 	IMG_HANDLE			hDevCookie;
 	IMG_HANDLE			hDevMemHeap;
+#endif
 	IMG_UINT32			ui32Attribs;
 	IMG_SIZE_T			ui32Size;
 	IMG_SIZE_T			ui32Alignment;
+	IMG_PVOID			pvPrivData;
+	IMG_UINT32			ui32PrivDataLength;
 
 }PVRSRV_BRIDGE_IN_ALLOCDEVICEMEM;
 
- 
 typedef struct PVRSRV_BRIDGE_IN_MAPMEMINFOTOUSER_TAG
 {
-	IMG_UINT32				ui32BridgeFlags; 
+	IMG_UINT32  ui32BridgeFlags; 
+#if defined (SUPPORT_SID_INTERFACE)
+	IMG_SID     hKernelMemInfo;
+#else
 	PVRSRV_KERNEL_MEM_INFO	*psKernelMemInfo;
+#endif
 
 }PVRSRV_BRIDGE_IN_MAPMEMINFOTOUSER;
 
- 
 typedef struct PVRSRV_BRIDGE_IN_UNMAPMEMINFOFROMUSER_TAG
 {
-	IMG_UINT32				ui32BridgeFlags; 
+	IMG_UINT32      ui32BridgeFlags; 
+#if defined (SUPPORT_SID_INTERFACE)
+	IMG_SID         hKernelMemInfo;
+#else
 	PVRSRV_KERNEL_MEM_INFO	*psKernelMemInfo;
+#endif
 	IMG_PVOID				 pvLinAddr;
+#if defined (SUPPORT_SID_INTERFACE)
+	IMG_SID         hMappingInfo;
+#else
 	IMG_HANDLE				 hMappingInfo;
+#endif
 
 }PVRSRV_BRIDGE_IN_UNMAPMEMINFOFROMUSER;
 
- 
 typedef struct PVRSRV_BRIDGE_IN_FREEDEVICEMEM_TAG
 {
-	IMG_UINT32				ui32BridgeFlags; 
+	IMG_UINT32              ui32BridgeFlags; 
+#if defined (SUPPORT_SID_INTERFACE)
+	IMG_SID                 hDevCookie;
+	IMG_SID                 hKernelMemInfo;
+#else
 	IMG_HANDLE				hDevCookie;
 	PVRSRV_KERNEL_MEM_INFO	*psKernelMemInfo;
-	PVRSRV_CLIENT_MEM_INFO	sClientMemInfo;
+#endif
+	PVRSRV_CLIENT_MEM_INFO  sClientMemInfo;
 
 }PVRSRV_BRIDGE_IN_FREEDEVICEMEM;
 
- 
 typedef struct PVRSRV_BRIDGE_IN_EXPORTDEVICEMEM_TAG
 {
-	IMG_UINT32				ui32BridgeFlags; 
+	IMG_UINT32      ui32BridgeFlags; 
+#if defined (SUPPORT_SID_INTERFACE)
+	IMG_SID         hDevCookie;
+	IMG_SID         hKernelMemInfo;
+#else
 	IMG_HANDLE				hDevCookie;
 	PVRSRV_KERNEL_MEM_INFO	*psKernelMemInfo;
+#endif
 
 }PVRSRV_BRIDGE_IN_EXPORTDEVICEMEM;
 
- 
 typedef struct PVRSRV_BRIDGE_IN_GETFREEDEVICEMEM_TAG
 {
 	IMG_UINT32			ui32BridgeFlags; 
@@ -413,126 +478,163 @@
 
 } PVRSRV_BRIDGE_IN_GETFREEDEVICEMEM;
 
- 
 typedef struct PVRSRV_BRIDGE_IN_CREATECOMMANDQUEUE_TAG
 {
 	IMG_UINT32			ui32BridgeFlags; 
+#if defined (SUPPORT_SID_INTERFACE)
+	IMG_SID				hDevCookie;
+#else
 	IMG_HANDLE			hDevCookie;
+#endif
 	IMG_SIZE_T			ui32QueueSize;
 
 }PVRSRV_BRIDGE_IN_CREATECOMMANDQUEUE;
 
 
- 
 typedef struct PVRSRV_BRIDGE_IN_DESTROYCOMMANDQUEUE_TAG
 {
 	IMG_UINT32			ui32BridgeFlags; 
+#if defined (SUPPORT_SID_INTERFACE)
+	IMG_SID				hDevCookie;
+#else
 	IMG_HANDLE			hDevCookie;
+#endif
 	PVRSRV_QUEUE_INFO	*psQueueInfo;
 
 }PVRSRV_BRIDGE_IN_DESTROYCOMMANDQUEUE;
 
 
- 
 typedef struct PVRSRV_BRIDGE_IN_MHANDLE_TO_MMAP_DATA_TAG
 {
 	IMG_UINT32			ui32BridgeFlags; 
+#if defined (SUPPORT_SID_INTERFACE)
+	IMG_SID				hMHandle;	 
+#else
 	IMG_HANDLE			hMHandle;	 
+#endif
 } PVRSRV_BRIDGE_IN_MHANDLE_TO_MMAP_DATA;
 
 
- 
 typedef struct PVRSRV_BRIDGE_IN_RELEASE_MMAP_DATA_TAG
 {
 	IMG_UINT32			ui32BridgeFlags; 
+#if defined (SUPPORT_SID_INTERFACE)
+	IMG_SID				hMHandle;	 
+#else
 	IMG_HANDLE			hMHandle;	 
+#endif
 } PVRSRV_BRIDGE_IN_RELEASE_MMAP_DATA;
 
 
- 
 typedef struct PVRSRV_BRIDGE_IN_RESERVE_DEV_VIRTMEM_TAG
 {
 	IMG_UINT32			ui32BridgeFlags; 
+#if defined (SUPPORT_SID_INTERFACE)
+	IMG_SID				hDevMemHeap;
+#else
 	IMG_HANDLE			hDevMemHeap;
+#endif
 	IMG_DEV_VIRTADDR	*psDevVAddr;
 	IMG_SIZE_T			ui32Size;
 	IMG_SIZE_T			ui32Alignment;
 
 }PVRSRV_BRIDGE_IN_RESERVE_DEV_VIRTMEM;
 
- 
 typedef struct PVRSRV_BRIDGE_OUT_CONNECT_SERVICES_TAG
 {
-	PVRSRV_ERROR 			eError;
+	PVRSRV_ERROR    eError;
+#if defined (SUPPORT_SID_INTERFACE)
+	IMG_SID         hKernelServices;
+#else
 	IMG_HANDLE		hKernelServices;
+#endif
 }PVRSRV_BRIDGE_OUT_CONNECT_SERVICES;
 
- 
 typedef struct PVRSRV_BRIDGE_OUT_RESERVE_DEV_VIRTMEM_TAG
 {
-	PVRSRV_ERROR 			eError;
+	PVRSRV_ERROR            eError;
+#if defined (SUPPORT_SID_INTERFACE)
+	IMG_SID                 hKernelMemInfo;
+	IMG_SID                 hKernelSyncInfo;
+#else
 	PVRSRV_KERNEL_MEM_INFO	*psKernelMemInfo;
 	PVRSRV_KERNEL_SYNC_INFO	*psKernelSyncInfo;
-	PVRSRV_CLIENT_MEM_INFO	sClientMemInfo;
-	PVRSRV_CLIENT_SYNC_INFO	sClientSyncInfo;
+#endif
+	PVRSRV_CLIENT_MEM_INFO  sClientMemInfo;
+	PVRSRV_CLIENT_SYNC_INFO sClientSyncInfo;
 
 }PVRSRV_BRIDGE_OUT_RESERVE_DEV_VIRTMEM;
 
 
- 
 typedef struct PVRSRV_BRIDGE_IN_FREE_DEV_VIRTMEM_TAG
 {
-	IMG_UINT32				ui32BridgeFlags; 
+	IMG_UINT32              ui32BridgeFlags; 
+#if defined (SUPPORT_SID_INTERFACE)
+	IMG_SID                 hKernelMemInfo;
+#else
 	PVRSRV_KERNEL_MEM_INFO	*psKernelMemInfo;
-	PVRSRV_CLIENT_MEM_INFO	sClientMemInfo;
-	PVRSRV_CLIENT_SYNC_INFO	sClientSyncInfo;
+#endif
+	PVRSRV_CLIENT_MEM_INFO  sClientMemInfo;
+	PVRSRV_CLIENT_SYNC_INFO sClientSyncInfo;
 
 }PVRSRV_BRIDGE_IN_FREE_DEV_VIRTMEM;
 
 
- 
 typedef struct PVRSRV_BRIDGE_IN_MAP_DEV_MEMORY_TAG
 {
 	IMG_UINT32				ui32BridgeFlags; 
+#if defined (SUPPORT_SID_INTERFACE)
+	IMG_SID					hKernelMemInfo;
+	IMG_SID					hDstDevMemHeap;
+#else
 	IMG_HANDLE				hKernelMemInfo;
 	IMG_HANDLE				hDstDevMemHeap;
+#endif
 
 }PVRSRV_BRIDGE_IN_MAP_DEV_MEMORY;
 
 
- 
 typedef struct PVRSRV_BRIDGE_OUT_MAP_DEV_MEMORY_TAG
 {
-	PVRSRV_ERROR			eError;
+	PVRSRV_ERROR            eError;
+#if defined (SUPPORT_SID_INTERFACE)
+	IMG_SID                 hDstKernelMemInfo;
+#else
 	PVRSRV_KERNEL_MEM_INFO	*psDstKernelMemInfo;
-	PVRSRV_CLIENT_MEM_INFO	sDstClientMemInfo;
-	PVRSRV_CLIENT_SYNC_INFO	sDstClientSyncInfo;
+#endif
+	PVRSRV_CLIENT_MEM_INFO  sDstClientMemInfo;
+	PVRSRV_CLIENT_SYNC_INFO sDstClientSyncInfo;
 
 }PVRSRV_BRIDGE_OUT_MAP_DEV_MEMORY;
 
 
- 
 typedef struct PVRSRV_BRIDGE_IN_UNMAP_DEV_MEMORY_TAG
 {
-	IMG_UINT32					ui32BridgeFlags; 
+	IMG_UINT32              ui32BridgeFlags; 
+#if defined (SUPPORT_SID_INTERFACE)
+	IMG_SID                 hKernelMemInfo;
+#else
 	PVRSRV_KERNEL_MEM_INFO		*psKernelMemInfo;
-	PVRSRV_CLIENT_MEM_INFO		sClientMemInfo;
-	PVRSRV_CLIENT_SYNC_INFO		sClientSyncInfo;	
+#endif
+	PVRSRV_CLIENT_MEM_INFO  sClientMemInfo;
+	PVRSRV_CLIENT_SYNC_INFO sClientSyncInfo;
 
 }PVRSRV_BRIDGE_IN_UNMAP_DEV_MEMORY;
 
 
- 
 typedef struct PVRSRV_BRIDGE_IN_MAP_EXT_MEMORY_TAG
 {
-	IMG_UINT32				ui32BridgeFlags; 
+	IMG_UINT32       ui32BridgeFlags; 
+#if defined (SUPPORT_SID_INTERFACE)
+	IMG_SID          hKernelMemInfo;
+#else
 	PVRSRV_KERNEL_MEM_INFO	*psKernelMemInfo;
-	IMG_SYS_PHYADDR			*psSysPAddr;
-	IMG_UINT32				ui32Flags;
+#endif
+	IMG_SYS_PHYADDR *psSysPAddr;
+	IMG_UINT32       ui32Flags;
 
 }PVRSRV_BRIDGE_IN_MAP_EXT_MEMORY;
 
- 
 typedef struct PVRSRV_BRIDGE_IN_UNMAP_EXT_MEMORY_TAG
 {
 	IMG_UINT32					ui32BridgeFlags; 
@@ -542,44 +644,58 @@
 
 }PVRSRV_BRIDGE_IN_UNMAP_EXT_MEMORY;
 
- 
 typedef struct PVRSRV_BRIDGE_IN_MAP_DEVICECLASS_MEMORY_TAG
 {
-	IMG_UINT32					ui32BridgeFlags; 
+	IMG_UINT32		ui32BridgeFlags; 
+#if defined (SUPPORT_SID_INTERFACE)
+	IMG_SID			hDeviceClassBuffer;
+	IMG_SID			hDevMemContext;
+#else
 	IMG_HANDLE		hDeviceClassBuffer;
 	IMG_HANDLE		hDevMemContext;
+#endif
 
 }PVRSRV_BRIDGE_IN_MAP_DEVICECLASS_MEMORY;
 
 
- 
 typedef struct PVRSRV_BRIDGE_OUT_MAP_DEVICECLASS_MEMORY_TAG
 {
-	PVRSRV_ERROR			eError;
-	PVRSRV_CLIENT_MEM_INFO	sClientMemInfo;
+	PVRSRV_ERROR            eError;
+	PVRSRV_CLIENT_MEM_INFO  sClientMemInfo;
 	PVRSRV_CLIENT_SYNC_INFO sClientSyncInfo;
+#if defined (SUPPORT_SID_INTERFACE)
+	IMG_SID                 hKernelMemInfo;
+	IMG_SID                 hMappingInfo;
+#else
 	PVRSRV_KERNEL_MEM_INFO	*psKernelMemInfo;
 	IMG_HANDLE				hMappingInfo;
+#endif
 
 }PVRSRV_BRIDGE_OUT_MAP_DEVICECLASS_MEMORY;
 
 
- 
 typedef struct PVRSRV_BRIDGE_IN_UNMAP_DEVICECLASS_MEMORY_TAG
 {
-	IMG_UINT32				ui32BridgeFlags; 
+	IMG_UINT32              ui32BridgeFlags; 
+#if defined (SUPPORT_SID_INTERFACE)
+	IMG_SID                 hKernelMemInfo;
+#else
 	PVRSRV_KERNEL_MEM_INFO	*psKernelMemInfo;
-	PVRSRV_CLIENT_MEM_INFO	sClientMemInfo;
-	PVRSRV_CLIENT_SYNC_INFO	sClientSyncInfo;
+#endif
+	PVRSRV_CLIENT_MEM_INFO  sClientMemInfo;
+	PVRSRV_CLIENT_SYNC_INFO sClientSyncInfo;
 
 }PVRSRV_BRIDGE_IN_UNMAP_DEVICECLASS_MEMORY;
 
 
- 
 typedef struct PVRSRV_BRIDGE_IN_PDUMP_MEMPOL_TAG
 {
 	IMG_UINT32 ui32BridgeFlags; 
+#if defined (SUPPORT_SID_INTERFACE)
+	IMG_SID    hKernelMemInfo;
+#else
 	PVRSRV_KERNEL_MEM_INFO	*psKernelMemInfo;
+#endif
 	IMG_UINT32 ui32Offset;
 	IMG_UINT32 ui32Value;
 	IMG_UINT32 ui32Mask;
@@ -588,25 +704,32 @@
 
 }PVRSRV_BRIDGE_IN_PDUMP_MEMPOL;
 
- 
 typedef struct PVRSRV_BRIDGE_IN_PDUMP_SYNCPOL_TAG
 {
 	IMG_UINT32 ui32BridgeFlags; 
+#if defined (SUPPORT_SID_INTERFACE)
+	IMG_SID    hKernelSyncInfo;
+#else
 	PVRSRV_KERNEL_SYNC_INFO	*psKernelSyncInfo;
-	IMG_BOOL bIsRead;
+#endif
+	IMG_BOOL   bIsRead;
+	IMG_BOOL   bUseLastOpDumpVal;
 	IMG_UINT32 ui32Value;
 	IMG_UINT32 ui32Mask;
 
 }PVRSRV_BRIDGE_IN_PDUMP_SYNCPOL;
 
 
- 
 typedef struct PVRSRV_BRIDGE_IN_PDUMP_DUMPMEM_TAG
 {
 	IMG_UINT32 ui32BridgeFlags; 
-	IMG_PVOID pvLinAddr;
-	IMG_PVOID pvAltLinAddr;
+	IMG_PVOID  pvLinAddr;
+	IMG_PVOID  pvAltLinAddr;
+#if defined (SUPPORT_SID_INTERFACE)
+	IMG_SID    hKernelMemInfo;
+#else
 	PVRSRV_KERNEL_MEM_INFO	*psKernelMemInfo;
+#endif
 	IMG_UINT32 ui32Offset;
 	IMG_UINT32 ui32Bytes;
 	IMG_UINT32 ui32Flags;
@@ -614,41 +737,49 @@
 }PVRSRV_BRIDGE_IN_PDUMP_DUMPMEM;
 
 
- 
 typedef struct PVRSRV_BRIDGE_IN_PDUMP_DUMPSYNC_TAG
 {
 	IMG_UINT32 ui32BridgeFlags; 
-	IMG_PVOID pvAltLinAddr;
+	IMG_PVOID  pvAltLinAddr;
+#if defined (SUPPORT_SID_INTERFACE)
+	IMG_SID    hKernelSyncInfo;
+#else
 	PVRSRV_KERNEL_SYNC_INFO	*psKernelSyncInfo;
+#endif
 	IMG_UINT32 ui32Offset;
 	IMG_UINT32 ui32Bytes;
 
 }PVRSRV_BRIDGE_IN_PDUMP_DUMPSYNC;
 
 
- 
 typedef struct PVRSRV_BRIDGE_IN_PDUMP_DUMPREG_TAG
 {
 	IMG_UINT32		ui32BridgeFlags; 
+#if defined (SUPPORT_SID_INTERFACE)
+	IMG_SID			hDevCookie;
+#else
 	IMG_HANDLE		hDevCookie;
+#endif
 	PVRSRV_HWREG	sHWReg;
 	IMG_UINT32		ui32Flags;
 	IMG_CHAR		szRegRegion[32];
 
 }PVRSRV_BRIDGE_IN_PDUMP_DUMPREG;
 
- 
 typedef struct PVRSRV_BRIDGE_IN_PDUMP_REGPOL_TAG
 {
 	IMG_UINT32 ui32BridgeFlags; 
+#if defined (SUPPORT_SID_INTERFACE)
+	IMG_SID    hDevCookie;
+#else
 	IMG_HANDLE hDevCookie;
+#endif
 	PVRSRV_HWREG sHWReg;
 	IMG_UINT32 ui32Mask;
 	IMG_UINT32 ui32Flags;
-	IMG_CHAR		szRegRegion[32];
+	IMG_CHAR   szRegRegion[32];
 }PVRSRV_BRIDGE_IN_PDUMP_REGPOL;
 
- 
 typedef struct PVRSRV_BRIDGE_IN_PDUMP_DUMPPDREG_TAG
 {
 	IMG_UINT32 ui32BridgeFlags; 
@@ -657,21 +788,25 @@
 
 }PVRSRV_BRIDGE_IN_PDUMP_DUMPPDREG;
 
- 
 typedef struct PVRSRV_BRIDGE_IN_PDUMP_MEMPAGES_TAG
 {
 	IMG_UINT32			ui32BridgeFlags; 
+#if defined (SUPPORT_SID_INTERFACE)
+	IMG_SID				hDevCookie;
+	IMG_SID				hKernelMemInfo;
+#else
+	IMG_HANDLE			hDevCookie;
 	IMG_HANDLE			hKernelMemInfo;
+#endif
 	IMG_DEV_PHYADDR		*pPages;
 	IMG_UINT32			ui32NumPages;
-	IMG_DEV_VIRTADDR	sDevAddr;
+	IMG_DEV_VIRTADDR	sDevVAddr;
 	IMG_UINT32			ui32Start;
 	IMG_UINT32			ui32Length;
-	IMG_BOOL			bContinuous;
+	IMG_UINT32			ui32Flags;
 
 }PVRSRV_BRIDGE_IN_PDUMP_MEMPAGES;
 
- 
 typedef struct PVRSRV_BRIDGE_IN_PDUMP_COMMENT_TAG
 {
 	IMG_UINT32 ui32BridgeFlags; 
@@ -681,7 +816,6 @@
 }PVRSRV_BRIDGE_IN_PDUMP_COMMENT;
 
 
- 
 typedef struct PVRSRV_BRIDGE_IN_PDUMP_SETFRAME_TAG
 {
 	IMG_UINT32 ui32BridgeFlags; 
@@ -690,19 +824,25 @@
 }PVRSRV_BRIDGE_IN_PDUMP_SETFRAME;
 
 
- 
-
 typedef struct PVRSRV_BRIDGE_IN_PDUMP_BITMAP_TAG
 {
 	IMG_UINT32 ui32BridgeFlags; 
+#if defined (SUPPORT_SID_INTERFACE)
+	IMG_SID    hDevCookie;
+#else
 	IMG_HANDLE hDevCookie;
-	IMG_CHAR szFileName[PVRSRV_PDUMP_MAX_FILENAME_SIZE];
+#endif
+	IMG_CHAR   szFileName[PVRSRV_PDUMP_MAX_FILENAME_SIZE];
 	IMG_UINT32 ui32FileOffset;
 	IMG_UINT32 ui32Width;
 	IMG_UINT32 ui32Height;
 	IMG_UINT32 ui32StrideInBytes;
 	IMG_DEV_VIRTADDR sDevBaseAddr;
+#if defined (SUPPORT_SID_INTERFACE)
+	IMG_SID    hDevMemContext;
+#else
 	IMG_HANDLE hDevMemContext;
+#endif
 	IMG_UINT32 ui32Size;
 	PDUMP_PIXEL_FORMAT ePixelFormat;
 	PDUMP_MEM_FORMAT eMemFormat;
@@ -711,21 +851,23 @@
 }PVRSRV_BRIDGE_IN_PDUMP_BITMAP;
 
 
- 
 typedef struct PVRSRV_BRIDGE_IN_PDUMP_READREG_TAG
 {
 	IMG_UINT32 ui32BridgeFlags; 
+#if defined (SUPPORT_SID_INTERFACE)
+	IMG_SID    hDevCookie;
+#else
 	IMG_HANDLE hDevCookie;
-	IMG_CHAR szFileName[PVRSRV_PDUMP_MAX_FILENAME_SIZE];
+#endif
+	IMG_CHAR   szFileName[PVRSRV_PDUMP_MAX_FILENAME_SIZE];
 	IMG_UINT32 ui32FileOffset;
 	IMG_UINT32 ui32Address;
 	IMG_UINT32 ui32Size;
 	IMG_UINT32 ui32Flags;
-	IMG_CHAR szRegRegion[32];
+	IMG_CHAR   szRegRegion[32];
 
 }PVRSRV_BRIDGE_IN_PDUMP_READREG;
 
- 
 typedef struct PVRSRV_BRIDGE_IN_PDUMP_DRIVERINFO_TAG
 {
 	IMG_UINT32 ui32BridgeFlags; 
@@ -737,21 +879,27 @@
 typedef struct PVRSRV_BRIDGE_IN_PDUMP_DUMPPDDEVPADDR_TAG
 {
 	IMG_UINT32 ui32BridgeFlags; 
+#if defined (SUPPORT_SID_INTERFACE)
+	IMG_SID    hKernelMemInfo;
+#else
 	IMG_HANDLE hKernelMemInfo;
+#endif
 	IMG_UINT32 ui32Offset;
 	IMG_DEV_PHYADDR sPDDevPAddr;
 }PVRSRV_BRIDGE_IN_PDUMP_DUMPPDDEVPADDR;
 
- 
 typedef struct PVRSRV_BRIDGE_PDUM_IN_CYCLE_COUNT_REG_READ_TAG
 {
 	IMG_UINT32 ui32BridgeFlags; 
+#if defined (SUPPORT_SID_INTERFACE)
+	IMG_SID    hDevCookie;
+#else
 	IMG_HANDLE hDevCookie;
+#endif
 	IMG_UINT32 ui32RegOffset;
 	IMG_BOOL bLastFrame;
 }PVRSRV_BRIDGE_IN_PDUMP_CYCLE_COUNT_REG_READ;
 
- 
 typedef struct PVRSRV_BRIDGE_OUT_ENUMDEVICE_TAG
 {
 	PVRSRV_ERROR eError;
@@ -761,17 +909,19 @@
 }PVRSRV_BRIDGE_OUT_ENUMDEVICE;
 
 
- 
 typedef struct PVRSRV_BRIDGE_OUT_ACQUIRE_DEVICEINFO_TAG
 {
 
 	PVRSRV_ERROR		eError;
+#if defined (SUPPORT_SID_INTERFACE)
+	IMG_SID				hDevCookie;
+#else
 	IMG_HANDLE			hDevCookie;
+#endif
 
 } PVRSRV_BRIDGE_OUT_ACQUIRE_DEVICEINFO;
 
 
- 
 typedef struct PVRSRV_BRIDGE_OUT_ENUMCLASS_TAG
 {
 	PVRSRV_ERROR eError;
@@ -781,30 +931,40 @@
 }PVRSRV_BRIDGE_OUT_ENUMCLASS;
 
 
- 
 typedef struct PVRSRV_BRIDGE_IN_OPEN_DISPCLASS_DEVICE_TAG
 {
 	IMG_UINT32		ui32BridgeFlags; 
 	IMG_UINT32		ui32DeviceID;
+#if defined (SUPPORT_SID_INTERFACE)
+	IMG_SID			hDevCookie;
+#else
 	IMG_HANDLE		hDevCookie;
-	
+#endif
+
 }PVRSRV_BRIDGE_IN_OPEN_DISPCLASS_DEVICE;
 
- 
 typedef struct PVRSRV_BRIDGE_OUT_OPEN_DISPCLASS_DEVICE_TAG
 {
 	PVRSRV_ERROR	eError;
+#if defined (SUPPORT_SID_INTERFACE)
+	IMG_SID			hDeviceKM;
+#else
 	IMG_HANDLE		hDeviceKM;
+#endif
 
 }PVRSRV_BRIDGE_OUT_OPEN_DISPCLASS_DEVICE;
 
 
- 
 typedef struct PVRSRV_BRIDGE_IN_WRAP_EXT_MEMORY_TAG
 {
 	IMG_UINT32				ui32BridgeFlags; 
+#if defined (SUPPORT_SID_INTERFACE)
+	IMG_SID                 hDevCookie;
+	IMG_SID					hDevMemContext;
+#else
 	IMG_HANDLE              hDevCookie;
 	IMG_HANDLE				hDevMemContext;
+#endif
 	IMG_VOID				*pvLinAddr;
 	IMG_SIZE_T              ui32ByteSize;
 	IMG_SIZE_T              ui32PageOffset;
@@ -815,7 +975,6 @@
 
 }PVRSRV_BRIDGE_IN_WRAP_EXT_MEMORY;
 
- 
 typedef struct PVRSRV_BRIDGE_OUT_WRAP_EXT_MEMORY_TAG
 {
 	PVRSRV_ERROR	eError;
@@ -824,11 +983,14 @@
 
 }PVRSRV_BRIDGE_OUT_WRAP_EXT_MEMORY;
 
- 
 typedef struct PVRSRV_BRIDGE_IN_UNWRAP_EXT_MEMORY_TAG
 {
 	IMG_UINT32 ui32BridgeFlags; 
+#if defined (SUPPORT_SID_INTERFACE)
+	IMG_SID    hKernelMemInfo;
+#else
 	IMG_HANDLE hKernelMemInfo;
+#endif
 	PVRSRV_CLIENT_MEM_INFO	sClientMemInfo;
 	PVRSRV_CLIENT_SYNC_INFO sClientSyncInfo;
 
@@ -840,7 +1002,6 @@
 #define PVRSRV_MAX_DC_SWAPCHAIN_BUFFERS			4
 #define PVRSRV_MAX_DC_CLIP_RECTS				32
 
- 
 typedef struct PVRSRV_BRIDGE_OUT_ENUM_DISPCLASS_FORMATS_TAG
 {
 	PVRSRV_ERROR	eError;
@@ -850,17 +1011,19 @@
 }PVRSRV_BRIDGE_OUT_ENUM_DISPCLASS_FORMATS;
 
 
- 
 typedef struct PVRSRV_BRIDGE_IN_ENUM_DISPCLASS_DIMS_TAG
 {
 	IMG_UINT32		ui32BridgeFlags; 
+#if defined (SUPPORT_SID_INTERFACE)
+	IMG_SID			hDeviceKM;
+#else
 	IMG_HANDLE		hDeviceKM;
+#endif
 	DISPLAY_FORMAT	sFormat;
 
 }PVRSRV_BRIDGE_IN_ENUM_DISPCLASS_DIMS;
 
 
- 
 typedef struct PVRSRV_BRIDGE_OUT_ENUM_DISPCLASS_DIMS_TAG
 {
 	PVRSRV_ERROR	eError;
@@ -870,7 +1033,6 @@
 }PVRSRV_BRIDGE_OUT_ENUM_DISPCLASS_DIMS;
 
 
- 
 typedef struct PVRSRV_BRIDGE_OUT_GET_DISPCLASS_INFO_TAG
 {
 	PVRSRV_ERROR	eError;
@@ -879,20 +1041,26 @@
 }PVRSRV_BRIDGE_OUT_GET_DISPCLASS_INFO;
 
 
- 
 typedef struct PVRSRV_BRIDGE_OUT_GET_DISPCLASS_SYSBUFFER_TAG
 {
 	PVRSRV_ERROR	eError;
+#if defined (SUPPORT_SID_INTERFACE)
+	IMG_SID			hBuffer;
+#else
 	IMG_HANDLE		hBuffer;
+#endif
 
 }PVRSRV_BRIDGE_OUT_GET_DISPCLASS_SYSBUFFER;
 
 
- 
 typedef struct PVRSRV_BRIDGE_IN_CREATE_DISPCLASS_SWAPCHAIN_TAG
 {
 	IMG_UINT32				ui32BridgeFlags; 
+#if defined (SUPPORT_SID_INTERFACE)
+	IMG_SID					hDeviceKM;
+#else
 	IMG_HANDLE				hDeviceKM;
+#endif
 	IMG_UINT32				ui32Flags;
 	DISPLAY_SURF_ATTRIBUTES	sDstSurfAttrib;
 	DISPLAY_SURF_ATTRIBUTES	sSrcSurfAttrib;
@@ -903,112 +1071,171 @@
 } PVRSRV_BRIDGE_IN_CREATE_DISPCLASS_SWAPCHAIN;
 
 
- 
 typedef struct PVRSRV_BRIDGE_OUT_CREATE_DISPCLASS_SWAPCHAIN_TAG
 {
 	PVRSRV_ERROR		eError;
+#if defined (SUPPORT_SID_INTERFACE)
+	IMG_SID				hSwapChain;
+#else
 	IMG_HANDLE			hSwapChain;
+#endif
 	IMG_UINT32			ui32SwapChainID;
 
 } PVRSRV_BRIDGE_OUT_CREATE_DISPCLASS_SWAPCHAIN;
 
 
- 
 typedef struct PVRSRV_BRIDGE_IN_DESTROY_DISPCLASS_SWAPCHAIN_TAG
 {
 	IMG_UINT32			ui32BridgeFlags; 
+#if defined (SUPPORT_SID_INTERFACE)
+	IMG_SID				hDeviceKM;
+	IMG_SID				hSwapChain;
+#else
 	IMG_HANDLE			hDeviceKM;
 	IMG_HANDLE			hSwapChain;
+#endif
 
 } PVRSRV_BRIDGE_IN_DESTROY_DISPCLASS_SWAPCHAIN;
 
 
- 
 typedef struct PVRSRV_BRIDGE_IN_SET_DISPCLASS_RECT_TAG
 {
 	IMG_UINT32			ui32BridgeFlags; 
+#if defined (SUPPORT_SID_INTERFACE)
+	IMG_SID				hDeviceKM;
+	IMG_SID				hSwapChain;
+#else
 	IMG_HANDLE			hDeviceKM;
 	IMG_HANDLE			hSwapChain;
+#endif
 	IMG_RECT			sRect;
 
 } PVRSRV_BRIDGE_IN_SET_DISPCLASS_RECT;
 
 
- 
 typedef struct PVRSRV_BRIDGE_IN_SET_DISPCLASS_COLOURKEY_TAG
 {
 	IMG_UINT32			ui32BridgeFlags; 
+#if defined (SUPPORT_SID_INTERFACE)
+	IMG_SID				hDeviceKM;
+	IMG_SID				hSwapChain;
+#else
 	IMG_HANDLE			hDeviceKM;
 	IMG_HANDLE			hSwapChain;
+#endif
 	IMG_UINT32			ui32CKColour;
 
 } PVRSRV_BRIDGE_IN_SET_DISPCLASS_COLOURKEY;
 
 
- 
 typedef struct PVRSRV_BRIDGE_IN_GET_DISPCLASS_BUFFERS_TAG
 {
 	IMG_UINT32			ui32BridgeFlags; 
+#if defined (SUPPORT_SID_INTERFACE)
+	IMG_SID				hDeviceKM;
+	IMG_SID				hSwapChain;
+#else
 	IMG_HANDLE			hDeviceKM;
 	IMG_HANDLE			hSwapChain;
+#endif
 
 } PVRSRV_BRIDGE_IN_GET_DISPCLASS_BUFFERS;
 
 
- 
 typedef struct PVRSRV_BRIDGE_OUT_GET_DISPCLASS_BUFFERS_TAG
 {
 	PVRSRV_ERROR		eError;
 	IMG_UINT32			ui32BufferCount;
+#if defined (SUPPORT_SID_INTERFACE)
+	IMG_SID				ahBuffer[PVRSRV_MAX_DC_SWAPCHAIN_BUFFERS];
+#else
 	IMG_HANDLE			ahBuffer[PVRSRV_MAX_DC_SWAPCHAIN_BUFFERS];
-
+#endif
+	IMG_SYS_PHYADDR		asPhyAddr[PVRSRV_MAX_DC_SWAPCHAIN_BUFFERS];
 } PVRSRV_BRIDGE_OUT_GET_DISPCLASS_BUFFERS;
 
 
- 
 typedef struct PVRSRV_BRIDGE_IN_SWAP_DISPCLASS_TO_BUFFER_TAG
 {
 	IMG_UINT32			ui32BridgeFlags; 
+#if defined (SUPPORT_SID_INTERFACE)
+	IMG_SID				hDeviceKM;
+	IMG_SID				hBuffer;
+#else
 	IMG_HANDLE			hDeviceKM;
 	IMG_HANDLE			hBuffer;
+#endif
 	IMG_UINT32			ui32SwapInterval;
+#if defined (SUPPORT_SID_INTERFACE)
+	IMG_SID				hPrivateTag;
+#else
 	IMG_HANDLE			hPrivateTag;
+#endif
 	IMG_UINT32			ui32ClipRectCount;
 	IMG_RECT			sClipRect[PVRSRV_MAX_DC_CLIP_RECTS];
 
 } PVRSRV_BRIDGE_IN_SWAP_DISPCLASS_TO_BUFFER;
 
+typedef struct PVRSRV_BRIDGE_IN_SWAP_DISPCLASS_TO_BUFFER2_TAG
+{
+	IMG_UINT32			ui32BridgeFlags; 
+#if defined (SUPPORT_SID_INTERFACE)
+	IMG_SID				hDeviceKM;
+	IMG_SID				hSwapChain;
+#else
+	IMG_HANDLE			hDeviceKM;
+	IMG_HANDLE			hSwapChain;
+#endif
+	IMG_UINT32			ui32SwapInterval;
+
+	IMG_UINT32			ui32NumMemInfos;
+	PVRSRV_KERNEL_MEM_INFO	**ppsKernelMemInfos;
+	PVRSRV_KERNEL_SYNC_INFO	**ppsKernelSyncInfos;
+
+	IMG_UINT32			ui32PrivDataLength;
+	IMG_PVOID			pvPrivData;
+
+} PVRSRV_BRIDGE_IN_SWAP_DISPCLASS_TO_BUFFER2;
 
- 
 typedef struct PVRSRV_BRIDGE_IN_SWAP_DISPCLASS_TO_SYSTEM_TAG
 {
 	IMG_UINT32			ui32BridgeFlags; 
+#if defined (SUPPORT_SID_INTERFACE)
+	IMG_SID				hDeviceKM;
+	IMG_SID				hSwapChain;
+#else
 	IMG_HANDLE			hDeviceKM;
 	IMG_HANDLE			hSwapChain;
+#endif
 
 } PVRSRV_BRIDGE_IN_SWAP_DISPCLASS_TO_SYSTEM;
 
 
- 
 typedef struct PVRSRV_BRIDGE_IN_OPEN_BUFFERCLASS_DEVICE_TAG
 {
 	IMG_UINT32			ui32BridgeFlags; 
 	IMG_UINT32			ui32DeviceID;
+#if defined (SUPPORT_SID_INTERFACE)
+	IMG_SID				hDevCookie;
+#else
 	IMG_HANDLE			hDevCookie;
-	
+#endif
+
 } PVRSRV_BRIDGE_IN_OPEN_BUFFERCLASS_DEVICE;
 
 
- 
 typedef struct PVRSRV_BRIDGE_OUT_OPEN_BUFFERCLASS_DEVICE_TAG
 {
-	PVRSRV_ERROR		eError;
+	PVRSRV_ERROR eError;
+#if defined (SUPPORT_SID_INTERFACE)
+	IMG_SID      hDeviceKM;
+#else
 	IMG_HANDLE			hDeviceKM;
+#endif
 
 } PVRSRV_BRIDGE_OUT_OPEN_BUFFERCLASS_DEVICE;
 
 
- 
 typedef struct PVRSRV_BRIDGE_OUT_GET_BUFFERCLASS_INFO_TAG
 {
 	PVRSRV_ERROR		eError;
@@ -1017,26 +1244,31 @@
 } PVRSRV_BRIDGE_OUT_GET_BUFFERCLASS_INFO;
 
 
- 
 typedef struct PVRSRV_BRIDGE_IN_GET_BUFFERCLASS_BUFFER_TAG
 {
-	IMG_UINT32			ui32BridgeFlags; 
+	IMG_UINT32 ui32BridgeFlags; 
+#if defined (SUPPORT_SID_INTERFACE)
+	IMG_SID    hDeviceKM;
+#else
 	IMG_HANDLE			hDeviceKM;
-	IMG_UINT32			ui32BufferIndex;
+#endif
+	IMG_UINT32 ui32BufferIndex;
 
 } PVRSRV_BRIDGE_IN_GET_BUFFERCLASS_BUFFER;
 
 
- 
 typedef struct PVRSRV_BRIDGE_OUT_GET_BUFFERCLASS_BUFFER_TAG
 {
-	PVRSRV_ERROR		eError;
+	PVRSRV_ERROR eError;
+#if defined (SUPPORT_SID_INTERFACE)
+	IMG_SID      hBuffer;
+#else
 	IMG_HANDLE			hBuffer;
+#endif
 
 } PVRSRV_BRIDGE_OUT_GET_BUFFERCLASS_BUFFER;
 
 
- 
 typedef struct PVRSRV_BRIDGE_OUT_GET_DEVMEM_HEAPINFO_TAG
 {
 	PVRSRV_ERROR		eError;
@@ -1046,42 +1278,54 @@
 } PVRSRV_BRIDGE_OUT_GET_DEVMEM_HEAPINFO;
 
 
- 
 typedef struct PVRSRV_BRIDGE_OUT_CREATE_DEVMEMCONTEXT_TAG
 {
 	PVRSRV_ERROR		eError;
+#if defined (SUPPORT_SID_INTERFACE)
+	IMG_SID				hDevMemContext;
+#else
 	IMG_HANDLE			hDevMemContext;
+#endif
 	IMG_UINT32			ui32ClientHeapCount;
 	PVRSRV_HEAP_INFO	sHeapInfo[PVRSRV_MAX_CLIENT_HEAPS];
 
 } PVRSRV_BRIDGE_OUT_CREATE_DEVMEMCONTEXT;
 
 
- 
 typedef struct PVRSRV_BRIDGE_OUT_CREATE_DEVMEMHEAP_TAG
 {
 	PVRSRV_ERROR		eError;
+#if defined (SUPPORT_SID_INTERFACE)
+	IMG_SID				hDevMemHeap;
+#else
 	IMG_HANDLE			hDevMemHeap;
+#endif
 
 } PVRSRV_BRIDGE_OUT_CREATE_DEVMEMHEAP;
 
 
- 
 typedef struct PVRSRV_BRIDGE_OUT_ALLOCDEVICEMEM_TAG
 {
-	PVRSRV_ERROR			eError;
+	PVRSRV_ERROR            eError;
+#if defined (SUPPORT_SID_INTERFACE)
+	IMG_SID                 hKernelMemInfo;
+#else
 	PVRSRV_KERNEL_MEM_INFO	*psKernelMemInfo;
-	PVRSRV_CLIENT_MEM_INFO	sClientMemInfo;
-	PVRSRV_CLIENT_SYNC_INFO	sClientSyncInfo;
+#endif
+	PVRSRV_CLIENT_MEM_INFO  sClientMemInfo;
+	PVRSRV_CLIENT_SYNC_INFO sClientSyncInfo;
 
 } PVRSRV_BRIDGE_OUT_ALLOCDEVICEMEM;
 
 
- 
 typedef struct PVRSRV_BRIDGE_OUT_EXPORTDEVICEMEM_TAG
 {
 	PVRSRV_ERROR			eError;
+#if defined (SUPPORT_SID_INTERFACE)
+	IMG_SID					hMemInfo;
+#else
 	IMG_HANDLE				hMemInfo;
+#endif
 #if defined(SUPPORT_MEMINFO_IDS)
 	IMG_UINT64				ui64Stamp;
 #endif
@@ -1093,12 +1337,15 @@
 {
 	PVRSRV_ERROR			eError;
 	IMG_PVOID				pvLinAddr;
+#if defined (SUPPORT_SID_INTERFACE)
+	IMG_SID					hMappingInfo;
+#else
 	IMG_HANDLE				hMappingInfo;
+#endif
 
 }PVRSRV_BRIDGE_OUT_MAPMEMINFOTOUSER;
 
 
- 
 typedef struct PVRSRV_BRIDGE_OUT_GETFREEDEVICEMEM_TAG
 {
 	PVRSRV_ERROR eError;
@@ -1113,7 +1360,7 @@
 typedef struct PVRSRV_BRIDGE_OUT_MHANDLE_TO_MMAP_DATA_TAG
 {
     PVRSRV_ERROR		eError;
-    
+
     
      IMG_UINT32			ui32MMapOffset;
 
@@ -1131,7 +1378,7 @@
 typedef struct PVRSRV_BRIDGE_OUT_RELEASE_MMAP_DATA_TAG
 {
     PVRSRV_ERROR		eError;
-    
+
     
     IMG_BOOL			bMUnmap;
 
@@ -1141,7 +1388,6 @@
     
     IMG_UINT32			ui32RealByteSize;
 } PVRSRV_BRIDGE_OUT_RELEASE_MMAP_DATA;
- 
 typedef struct PVRSRV_BRIDGE_IN_GET_MISC_INFO_TAG
 {
 	IMG_UINT32			ui32BridgeFlags; 
@@ -1150,7 +1396,6 @@
 }PVRSRV_BRIDGE_IN_GET_MISC_INFO;
 
 
- 
 typedef struct PVRSRV_BRIDGE_OUT_GET_MISC_INFO_TAG
 {
 	PVRSRV_ERROR		eError;
@@ -1159,7 +1404,6 @@
 }PVRSRV_BRIDGE_OUT_GET_MISC_INFO;
 
 
- 
 typedef struct PVRSRV_BRIDGE_IN_RELEASE_MISC_INFO_TAG
 {
 	IMG_UINT32			ui32BridgeFlags; 
@@ -1168,7 +1412,6 @@
 }PVRSRV_BRIDGE_IN_RELEASE_MISC_INFO;
 
 
- 
 typedef struct PVRSRV_BRIDGE_OUT_RELEASE_MISC_INFO_TAG
 {
 	PVRSRV_ERROR		eError;
@@ -1177,8 +1420,6 @@
 }PVRSRV_BRIDGE_OUT_RELEASE_MISC_INFO;
 
 
- 
-
 typedef struct PVRSRV_BRIDGE_OUT_PDUMP_ISCAPTURING_TAG
 {
 	PVRSRV_ERROR eError;
@@ -1186,8 +1427,7 @@
 
 } PVRSRV_BRIDGE_OUT_PDUMP_ISCAPTURING;
 
- 
-typedef struct PVRSRV_BRIDGE_IN_GET_FB_STATS_TAG 
+typedef struct PVRSRV_BRIDGE_IN_GET_FB_STATS_TAG
 {
 	IMG_UINT32 ui32BridgeFlags; 
 	IMG_SIZE_T ui32Total;
@@ -1196,18 +1436,20 @@
 } PVRSRV_BRIDGE_IN_GET_FB_STATS;
 
 
- 
 typedef struct PVRSRV_BRIDGE_IN_MAPPHYSTOUSERSPACE_TAG
 {
 	IMG_UINT32			ui32BridgeFlags; 
+#if defined (SUPPORT_SID_INTERFACE)
+	IMG_SID				hDevCookie;
+#else
 	IMG_HANDLE			hDevCookie;
+#endif
 	IMG_SYS_PHYADDR		sSysPhysAddr;
 	IMG_UINT32			uiSizeInBytes;
 
 } PVRSRV_BRIDGE_IN_MAPPHYSTOUSERSPACE;
 
 
- 
 typedef struct PVRSRV_BRIDGE_OUT_MAPPHYSTOUSERSPACE_TAG
 {
 	IMG_PVOID			pvUserAddr;
@@ -1217,18 +1459,20 @@
 } PVRSRV_BRIDGE_OUT_MAPPHYSTOUSERSPACE;
 
 
- 
 typedef struct PVRSRV_BRIDGE_IN_UNMAPPHYSTOUSERSPACE_TAG
 {
 	IMG_UINT32			ui32BridgeFlags; 
+#if defined (SUPPORT_SID_INTERFACE)
+	IMG_SID				hDevCookie;
+#else
 	IMG_HANDLE			hDevCookie;
+#endif
 	IMG_PVOID			pvUserAddr;
 	IMG_PVOID			pvProcess;
 
 } PVRSRV_BRIDGE_IN_UNMAPPHYSTOUSERSPACE;
 
 
- 
 typedef struct PVRSRV_BRIDGE_OUT_GETPHYSTOUSERSPACEMAP_TAG
 {
 	IMG_PVOID			*ppvTbl;
@@ -1237,7 +1481,7 @@
 } PVRSRV_BRIDGE_OUT_GETPHYSTOUSERSPACEMAP;
 
 
- 
+#if !defined (SUPPORT_SID_INTERFACE)
 typedef struct PVRSRV_BRIDGE_IN_REGISTER_SIM_PROCESS_TAG
 {
 	IMG_UINT32			ui32BridgeFlags; 
@@ -1275,6 +1519,7 @@
 	PVRSRV_ERROR 		eError;
 
 } PVRSRV_BRIDGE_IN_PROCESS_SIMISR_EVENT;
+#endif 
 
 typedef struct PVRSRV_BRIDGE_IN_INITSRV_DISCONNECT_TAG
 {
@@ -1292,16 +1537,24 @@
 
 typedef struct PVRSRV_BRIDGE_OUT_ALLOC_SHARED_SYS_MEM_TAG
 {
-	PVRSRV_ERROR			eError;
+	PVRSRV_ERROR            eError;
+#if defined (SUPPORT_SID_INTERFACE)
+#else
 	PVRSRV_KERNEL_MEM_INFO	*psKernelMemInfo;
-	PVRSRV_CLIENT_MEM_INFO	sClientMemInfo;
+#endif
+	PVRSRV_CLIENT_MEM_INFO  sClientMemInfo;
 }PVRSRV_BRIDGE_OUT_ALLOC_SHARED_SYS_MEM;
 
 typedef struct PVRSRV_BRIDGE_IN_FREE_SHARED_SYS_MEM_TAG
 {
-	IMG_UINT32				ui32BridgeFlags; 
+#if defined (SUPPORT_SID_INTERFACE)
+	IMG_SID                 hKernelMemInfo;
+	IMG_SID                 hMappingInfo;
+#else
+	IMG_UINT32              ui32BridgeFlags; 
 	PVRSRV_KERNEL_MEM_INFO	*psKernelMemInfo;
-	PVRSRV_CLIENT_MEM_INFO	sClientMemInfo;
+#endif
+	PVRSRV_CLIENT_MEM_INFO  sClientMemInfo;
 }PVRSRV_BRIDGE_IN_FREE_SHARED_SYS_MEM;
 
 typedef struct PVRSRV_BRIDGE_OUT_FREE_SHARED_SYS_MEM_TAG
@@ -1312,14 +1565,22 @@
 typedef struct PVRSRV_BRIDGE_IN_MAP_MEMINFO_MEM_TAG
 {
 	IMG_UINT32 ui32BridgeFlags; 
+#if defined (SUPPORT_SID_INTERFACE)
+	IMG_SID    hKernelMemInfo;
+#else
 	IMG_HANDLE hKernelMemInfo;
+#endif
 }PVRSRV_BRIDGE_IN_MAP_MEMINFO_MEM;
 
 typedef struct PVRSRV_BRIDGE_OUT_MAP_MEMINFO_MEM_TAG
 {
 	PVRSRV_CLIENT_MEM_INFO  sClientMemInfo;
-	PVRSRV_CLIENT_SYNC_INFO	sClientSyncInfo;
+	PVRSRV_CLIENT_SYNC_INFO sClientSyncInfo;
+#if defined (SUPPORT_SID_INTERFACE)
+	IMG_SID                 hKernelMemInfo;
+#else
 	PVRSRV_KERNEL_MEM_INFO  *psKernelMemInfo;
+#endif
 	PVRSRV_ERROR eError;
 }PVRSRV_BRIDGE_OUT_MAP_MEMINFO_MEM;
 
@@ -1337,7 +1598,11 @@
 typedef struct PVRSRV_BRIDGE_IN_GETMMU_PD_DEVPADDR_TAG
 {
 	IMG_UINT32 ui32BridgeFlags; 
+#if defined (SUPPORT_SID_INTERFACE)
+    IMG_SID    hDevMemContext;
+#else
     IMG_HANDLE hDevMemContext;
+#endif
 }PVRSRV_BRIDGE_IN_GETMMU_PD_DEVPADDR;
 
 typedef struct PVRSRV_BRIDGE_OUT_GETMMU_PD_DEVPADDR_TAG
@@ -1349,7 +1614,11 @@
 typedef struct PVRSRV_BRIDGE_IN_EVENT_OBJECT_WAI_TAG
 {
 	IMG_UINT32 ui32BridgeFlags; 
+#if defined (SUPPORT_SID_INTERFACE)
+	IMG_SID		hOSEventKM;
+#else
 	IMG_HANDLE	hOSEventKM;
+#endif
 } PVRSRV_BRIDGE_IN_EVENT_OBJECT_WAIT;
 
 typedef struct PVRSRV_BRIDGE_IN_EVENT_OBJECT_OPEN_TAG
@@ -1359,35 +1628,56 @@
 
 typedef struct	PVRSRV_BRIDGE_OUT_EVENT_OBJECT_OPEN_TAG
 {
+#if defined (SUPPORT_SID_INTERFACE)
+	IMG_UINT32   hOSEvent;
+#else
 	IMG_HANDLE hOSEvent;
+#endif
 	PVRSRV_ERROR eError;
 } PVRSRV_BRIDGE_OUT_EVENT_OBJECT_OPEN;
 
 typedef struct PVRSRV_BRIDGE_IN_EVENT_OBJECT_CLOSE_TAG
 {
 	PVRSRV_EVENTOBJECT sEventObject;
+#if defined (SUPPORT_SID_INTERFACE)
+	IMG_SID    hOSEventKM;
+#else
 	IMG_HANDLE hOSEventKM;
+#endif
 } PVRSRV_BRIDGE_IN_EVENT_OBJECT_CLOSE;
 
 typedef struct PVRSRV_BRIDGE_OUT_CREATE_SYNC_INFO_MOD_OBJ_TAG
 {
 	PVRSRV_ERROR eError;
 
+#if defined (SUPPORT_SID_INTERFACE)
+	IMG_SID    hKernelSyncInfoModObj;
+#else
 	IMG_HANDLE hKernelSyncInfoModObj;
+#endif
 
 } PVRSRV_BRIDGE_OUT_CREATE_SYNC_INFO_MOD_OBJ;
 
 typedef struct PVRSRV_BRIDGE_IN_DESTROY_SYNC_INFO_MOD_OBJ
 {
 	IMG_UINT32 ui32BridgeFlags; 
+#if defined (SUPPORT_SID_INTERFACE)
+	IMG_SID    hKernelSyncInfoModObj;
+#else
 	IMG_HANDLE hKernelSyncInfoModObj;
+#endif
 } PVRSRV_BRIDGE_IN_DESTROY_SYNC_INFO_MOD_OBJ;
 
 typedef struct PVRSRV_BRIDGE_IN_MODIFY_PENDING_SYNC_OPS_TAG
 {
 	IMG_UINT32 ui32BridgeFlags; 
+#if defined (SUPPORT_SID_INTERFACE)
+	IMG_SID    hKernelSyncInfoModObj;
+	IMG_SID    hKernelSyncInfo;
+#else
 	IMG_HANDLE hKernelSyncInfoModObj;
 	IMG_HANDLE hKernelSyncInfo;
+#endif
 	IMG_UINT32 ui32ModifyFlags;
 
 } PVRSRV_BRIDGE_IN_MODIFY_PENDING_SYNC_OPS;
@@ -1395,7 +1685,11 @@
 typedef struct PVRSRV_BRIDGE_IN_MODIFY_COMPLETE_SYNC_OPS_TAG
 {
 	IMG_UINT32 ui32BridgeFlags; 
+#if defined (SUPPORT_SID_INTERFACE)
+	IMG_SID    hKernelSyncInfoModObj;
+#else
 	IMG_HANDLE hKernelSyncInfoModObj;
+#endif
 } PVRSRV_BRIDGE_IN_MODIFY_COMPLETE_SYNC_OPS;
 
 typedef struct PVRSRV_BRIDGE_OUT_MODIFY_PENDING_SYNC_OPS_TAG
@@ -1405,19 +1699,62 @@
 	
 	IMG_UINT32 ui32ReadOpsPending;
 	IMG_UINT32 ui32WriteOpsPending;
+	IMG_UINT32 ui32ReadOps2Pending;
 
 } PVRSRV_BRIDGE_OUT_MODIFY_PENDING_SYNC_OPS;
 
+typedef struct PVRSRV_BRIDGE_IN_SYNC_OPS_TAKE_TOKEN_TAG
+{
+	IMG_UINT32 ui32BridgeFlags; 
+#if defined (SUPPORT_SID_INTERFACE)
+	IMG_SID    hKernelSyncInfo;
+#else
+	IMG_HANDLE hKernelSyncInfo;
+#endif
+
+} PVRSRV_BRIDGE_IN_SYNC_OPS_TAKE_TOKEN;
+
+typedef struct PVRSRV_BRIDGE_OUT_SYNC_OPS_TAKE_TOKEN_TAG
+{
+	PVRSRV_ERROR eError;
+
+	IMG_UINT32 ui32ReadOpsPending;
+	IMG_UINT32 ui32WriteOpsPending;
+	IMG_UINT32 ui32ReadOps2Pending;
+
+} PVRSRV_BRIDGE_OUT_SYNC_OPS_TAKE_TOKEN;
+
+typedef struct PVRSRV_BRIDGE_IN_SYNC_OPS_FLUSH_TO_TOKEN_TAG
+{
+	IMG_UINT32 ui32BridgeFlags; 
+#if defined (SUPPORT_SID_INTERFACE)
+	IMG_SID    hKernelSyncInfo;
+#else
+	IMG_HANDLE hKernelSyncInfo;
+#endif
+	IMG_UINT32 ui32ReadOpsPendingSnapshot;
+	IMG_UINT32 ui32WriteOpsPendingSnapshot;
+	IMG_UINT32 ui32ReadOps2PendingSnapshot;
+} PVRSRV_BRIDGE_IN_SYNC_OPS_FLUSH_TO_TOKEN;
+
 typedef struct PVRSRV_BRIDGE_IN_SYNC_OPS_FLUSH_TO_MOD_OBJ_TAG
 {
 	IMG_UINT32 ui32BridgeFlags; 
+#if defined (SUPPORT_SID_INTERFACE)
+	IMG_SID    hKernelSyncInfoModObj;
+#else
 	IMG_HANDLE hKernelSyncInfoModObj;
+#endif
 } PVRSRV_BRIDGE_IN_SYNC_OPS_FLUSH_TO_MOD_OBJ;
 
 typedef struct PVRSRV_BRIDGE_IN_SYNC_OPS_FLUSH_TO_DELTA_TAG
 {
 	IMG_UINT32 ui32BridgeFlags; 
+#if defined (SUPPORT_SID_INTERFACE)
+	IMG_SID    hKernelSyncInfo;
+#else
 	IMG_HANDLE hKernelSyncInfo;
+#endif
 	IMG_UINT32 ui32Delta;
 } PVRSRV_BRIDGE_IN_SYNC_OPS_FLUSH_TO_DELTA;
 
@@ -1425,23 +1762,41 @@
 {
 	IMG_UINT32 ui32BridgeFlags; 
 
+#if defined (SUPPORT_SID_INTERFACE)
+	IMG_SID    hDevCookie;
+#else
 	IMG_HANDLE hDevCookie;
+#endif
 } PVRSRV_BRIDGE_IN_ALLOC_SYNC_INFO;
 
 typedef struct PVRSRV_BRIDGE_OUT_ALLOC_SYNC_INFO_TAG
 {
 	PVRSRV_ERROR eError;
 
+#if defined (SUPPORT_SID_INTERFACE)
+	IMG_SID    hKernelSyncInfo;
+#else
 	IMG_HANDLE hKernelSyncInfo;
+#endif
 } PVRSRV_BRIDGE_OUT_ALLOC_SYNC_INFO;
 
 typedef struct PVRSRV_BRIDGE_IN_FREE_SYNC_INFO_TAG
 {
 	IMG_UINT32 ui32BridgeFlags; 
 
+#if defined (SUPPORT_SID_INTERFACE)
+	IMG_SID    hKernelSyncInfo;
+#else
 	IMG_HANDLE hKernelSyncInfo;
+#endif
 } PVRSRV_BRIDGE_IN_FREE_SYNC_INFO;
 
+typedef struct PVRSRV_BRIDGE_IN_CHG_DEV_MEM_ATTRIBS_TAG
+{
+	IMG_SID				hKernelMemInfo;
+	IMG_UINT32			ui32Attribs;
+} PVRSRV_BRIDGE_IN_CHG_DEV_MEM_ATTRIBS;
+
 
 #if defined (__cplusplus)
 }
